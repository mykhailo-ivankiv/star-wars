{"version":3,"sources":["utils/BEM.js","components/SearchHighlight/SearchHighlight.js","utils/strings.js","components/Person/Person.js","components/People/People.js","services/starWars.js","utils/validate.js","services/resolveRelatedResources.js","components/ResourceResolver/ResourceResolver.js","components/App/App.js","serviceWorker.js","index.js"],"names":["getBEMPAth","b","e","m","base","join","reduce","str","elementName","modifiers","Array","isArray","filter","Boolean","Object","entries","value","map","BEM","SearchHighlightContext","createContext","SearchHighlight","children","searchQuery","useContext","substringEntriesIndices","substr","result","regex","RegExp","replace","offset","index","search","push","deltaOffset","length","slice","getSubstringEntriesIndices","last","pop","splitAt","prefix","partWithSearchQueryAtStart","query","suffix","i","className","Person","name","birthYear","homeWorld","species","films","api","ApiContext","planetState","useAsync","planet","filmState","film","specie","a","undefined","padEnd","loading","error","title","People","useState","setSearch","debouncedSearch","setDebouncedSearch","useDebounce","people","type","placeholder","onChange","target","message","Provider","peopleAdapter","peopleResponse","data","results","birth_year","homeworld","planetAdapter","planetResponse","filmAdapter","specieAdapter","specieResponse","starWarsAPI","rootEndpoint","axios","get","memoizeWith","toLower","identity","planetId","filmId","specieId","isValidHttpUrl","string","url","URL","_","protocol","isPrimitive","val","getResource","getPathValuePairs","obj","prevPath","flatMap","key","path","Number","resolveRelatedResources","resourse","pipe","includes","assocPath","Promise","all","ResourceResolver","resource","setResource","JSON","stringify","text","setText","json","parse","useAsyncFn","resolvedResources","resolve","onClick","src","collapsed","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4cc8be3.chunk.js","sourcesContent":["const ELEMENT_SEPARATOR = \"__\"\nconst MODIFIER_SEPARATOR = \"--\"\n\nconst getBEMPAth = (b, e, m) => {\n  const base = e !== \"\" ? [b, e].join(ELEMENT_SEPARATOR) : b\n\n  return `${base} ${m.reduce((str, m) => `${str} ${base}${MODIFIER_SEPARATOR}${m}`, \"\")}`\n}\n\nconst b = (b) => (elementName, modifiers = []) => {\n  modifiers = typeof elementName === \"string\" ? modifiers : elementName || []\n\n  return getBEMPAth(\n    b,\n    typeof elementName === \"string\" ? elementName : \"\",\n    Array.isArray(modifiers)\n      ? modifiers.filter(Boolean)\n      : Object.entries(modifiers)\n        .filter(([, value]) => Boolean(value))\n        .map(([key]) => key)\n  )\n}\n\nexport default b\n","import React, {useContext, createContext} from \"react\";\nimport {splitAt} from \"ramda\";\nimport {getSubstringEntriesIndices} from \"../../utils/strings.js\";\n//\nimport \"./SearchHighlight.css\";\nimport BEM from \"../../utils/BEM.js\";\n\nconst b = BEM(\"SearchHighlight\");\n\nexport const SearchHighlightContext = createContext(\"\");\n\nconst SearchHighlight = ({children}) => {\n  const searchQuery = useContext(SearchHighlightContext);\n  const substringEntriesIndices = getSubstringEntriesIndices(\n    children,\n    searchQuery\n  );\n\n  return searchQuery === \"\" && substringEntriesIndices.length === 0\n    ? children\n    : substringEntriesIndices\n      .reduce(([result, offset], index) => {\n          const last = result.pop();\n          const [prefix, partWithSearchQueryAtStart] = splitAt(index - offset, last);\n          const [query, suffix] = splitAt(searchQuery.length, partWithSearchQueryAtStart);\n\n          result.push(prefix, query, suffix);\n\n          return [result, index + searchQuery.length];\n        },\n        [[children], 0]\n      )[0]\n      .map((str, i) => i % 2 === 0 ? str : <mark key={i} className={b()}>{str}</mark>);\n};\n\nexport default SearchHighlight;\n","const escapeRegExp = (pattern) =>\n  pattern.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\n\nexport const getSubstringEntriesIndices = (str, substr) => {\n  const result = [];\n\n  if (str === \"\" || substr === \"\") return result;\n\n  const regex = new RegExp(escapeRegExp(substr), \"gim\");\n  let offset = 0;\n  let index = str.search(regex);\n\n  while (index >= 0) {\n    result.push(index + offset);\n    const deltaOffset = index + substr.length;\n\n    str = str.slice(deltaOffset);\n    offset += deltaOffset;\n\n    index = str.search(regex);\n  }\n\n  return result;\n};\n","import { ApiContext } from \"../App/App.js\";\nimport { useAsync } from \"react-use\";\nimport { useContext } from \"react\";\nimport SearchHighlight from \"../SearchHighlight/SearchHighlight.js\";\n//\nimport \"./Person.css\";\nimport BEM from \"../../utils/BEM.js\";\nconst b = BEM(\"Person\");\n\nconst Person = ({ name, birthYear, homeWorld, species, films }) => {\n  const api = useContext(ApiContext);\n\n  const planetState = useAsync(() => api.planet(homeWorld), [homeWorld]);\n  const filmState = useAsync(() => api.film(films[0]), [films[0]]);\n  const specie = useAsync(\n    async () => (species[0] === undefined ? null : api.specie(species[0])),\n    [species[0]]\n  );\n\n  return (\n    <div className={b()}>\n      <SearchHighlight>{name.padEnd(20, ` `)}</SearchHighlight>\n      {birthYear.padEnd(10, ` `)}\n\n      {planetState.loading && \"loading\".padEnd(15)}\n      {planetState.error && \"error:\".padEnd(15)}\n      {planetState.value && planetState.value.name.padEnd(15)}\n\n      {filmState.loading && \"loading\".padEnd(20)}\n      {filmState.error && \"error\".padEnd(20)}\n      {filmState.value && filmState.value.title.padEnd(20)}\n\n      {specie.loading && \"loading\".padEnd(10)}\n      {specie.error && \"error\".padEnd(10)}\n      {specie.value && (specie.value?.name ?? \"\").padEnd(10)}\n    </div>\n  );\n};\n\nexport default Person;\n","import React, { useContext, useState } from \"react\";\nimport { ApiContext } from \"../App/App.js\";\nimport { useAsync, useDebounce } from \"react-use\";\nimport Person from \"../Person/Person.js\";\nimport { SearchHighlightContext } from \"../SearchHighlight/SearchHighlight.js\";\n//\nimport \"./People.css\";\nimport BEM from \"../../utils/BEM\";\nconst b = BEM(\"People\");\n\nconst People = () => {\n  const api = useContext(ApiContext);\n  const [search, setSearch] = useState(\"\");\n\n  const [debouncedSearch, setDebouncedSearch] = useState(search);\n  useDebounce(() => setDebouncedSearch(search), 400, [search]);\n\n  const people = useAsync(\n    () => api.people(debouncedSearch),\n    [api, debouncedSearch]\n  );\n\n  return (\n    <div className={b()}>\n      <input\n        type=\"text\"\n        className={b(\"search-input\")}\n        value={search}\n        placeholder=\"Search here\"\n        onChange={({ target }) => setSearch(target.value)}\n      />\n      <div className={b(\"search-result\", { loading: people.loading })}>\n        {people.loading && !people.value && \"loading\"}\n        {people.error && `Error: ${people.error.message}`}\n        {people.value?.map(({ name, birthYear, homeWorld, species, films }) => (\n          <SearchHighlightContext.Provider value={search}>\n            <div className={b(\"search-result-item\")}>\n              <Person\n                key={name}\n                name={name}\n                birthYear={birthYear}\n                homeWorld={homeWorld}\n                species={species}\n                films={films}\n              />\n            </div>\n          </SearchHighlightContext.Provider>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default People;\n","import axios from \"axios\";\nimport { identity, memoizeWith, toLower } from \"ramda\";\n\nconst peopleAdapter = (peopleResponse) =>\n  peopleResponse.data.results.map(\n    ({ name, birth_year, homeworld, species, films }) => ({\n      name,\n      birthYear: birth_year,\n      species,\n      films,\n      homeWorld: homeworld,\n    })\n  );\n\nconst planetAdapter = (planetResponse) => ({ name: planetResponse.data.name });\nconst filmAdapter = (planetResponse) => ({ title: planetResponse.data.title });\nconst specieAdapter = (specieResponse) => ({ name: specieResponse.data.name });\n\nexport const starWarsAPI = async (rootEndpoint = \"https://swapi.dev/api/\") => {\n  const { data: api } = await axios.get(rootEndpoint);\n  const { people } = api;\n\n  return {\n    people: memoizeWith(\n      (search= \"\") => toLower(search), async (search = \"\") => peopleAdapter(await axios.get(`${people}?search=${search}`))),\n\n    planet: memoizeWith(identity, async (planetId) => planetAdapter(await axios.get(planetId))),\n    film: memoizeWith(identity, async (filmId) => filmAdapter(await axios.get(filmId))),\n    specie: memoizeWith(identity, async (specieId) => specieAdapter(await axios.get(specieId))),\n  };\n};\n","export const isValidHttpUrl = string => {\n  let url;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n};\n\nexport const isPrimitive = val => Object(val) !== val;\n","import {isPrimitive, isValidHttpUrl} from \"../utils/validate.js\";\nimport {assocPath, filter, identity, map, memoizeWith, pipe, reduce} from \"ramda\";\nimport axios from \"axios\";\n\nconst getResource = memoizeWith(identity, async (url) => (await axios.get(url)).data)\n\nconst getPathValuePairs = (obj, prevPath = []) =>\n  Object.entries(obj)\n    .flatMap(([key, value]) => {\n      const path = Array.isArray(obj) ? Number(key) : key\n      return isPrimitive(value)\n        ? [[[...prevPath, path], value]]\n        : getPathValuePairs(value, [...prevPath, path]);\n    })\n\ngetPathValuePairs([1, 2, 3])/*?*/\n\nexport const resolveRelatedResources = async (resourse) => {\n  const data = pipe(\n    getPathValuePairs,\n    filter(([_, value]) => isValidHttpUrl(value)), // get only pairs where value is url\n    filter(([path]) => !path.includes(\"url\")), // filter out \"url\" key (it is self reference)\n    map(async ([path, value]) => [path, await getResource(value)])\n  )(resourse)\n\n\n  return reduce((result, [path, value]) => assocPath(path, value, result), resourse, await Promise.all(data))\n\n}\n\n\n\n","import React, {useState} from \"react\"\nimport {useAsyncFn, useDebounce} from \"react-use\";\nimport {resolveRelatedResources} from \"../../services/resolveRelatedResources.js\";\nimport ReactJson from \"react-json-view\";\n//\nimport \"./ResourceResolver.css\"\nimport BEM from \"../../utils/BEM.js\";\n\nconst b = BEM(\"ResourceResolver\");\n\nconst ResourceResolver = () => {\n  const [resource, setResource] = useState({\n    \"title\": \"A New Hope\",\n    \"episode_id\": 4,\n    \"opening_crawl\": \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\",\n    \"director\": \"George Lucas\",\n    \"producer\": \"Gary Kurtz, Rick McCallum\",\n    \"release_date\": \"1977-05-25\",\n    \"characters\": [\"https://swapi.dev/api/people/1/\", \"https://swapi.dev/api/people/2/\", \"https://swapi.dev/api/people/3/\", \"https://swapi.dev/api/people/4/\", \"https://swapi.dev/api/people/5/\", \"https://swapi.dev/api/people/6/\", \"https://swapi.dev/api/people/7/\", \"https://swapi.dev/api/people/8/\", \"https://swapi.dev/api/people/9/\", \"https://swapi.dev/api/people/10/\", \"https://swapi.dev/api/people/12/\", \"https://swapi.dev/api/people/13/\", \"https://swapi.dev/api/people/14/\", \"https://swapi.dev/api/people/15/\", \"https://swapi.dev/api/people/16/\", \"https://swapi.dev/api/people/18/\", \"https://swapi.dev/api/people/19/\", \"https://swapi.dev/api/people/81/\"],\n    \"planets\": [\"https://swapi.dev/api/planets/1/\", \"https://swapi.dev/api/planets/2/\", \"https://swapi.dev/api/planets/3/\"],\n    \"starships\": [\"https://swapi.dev/api/starships/2/\", \"https://swapi.dev/api/starships/3/\", \"https://swapi.dev/api/starships/5/\", \"https://swapi.dev/api/starships/9/\", \"https://swapi.dev/api/starships/10/\", \"https://swapi.dev/api/starships/11/\", \"https://swapi.dev/api/starships/12/\", \"https://swapi.dev/api/starships/13/\"],\n    \"vehicles\": [\"https://swapi.dev/api/vehicles/4/\", \"https://swapi.dev/api/vehicles/6/\", \"https://swapi.dev/api/vehicles/7/\", \"https://swapi.dev/api/vehicles/8/\"],\n    \"species\": [\"https://swapi.dev/api/species/1/\", \"https://swapi.dev/api/species/2/\", \"https://swapi.dev/api/species/3/\", \"https://swapi.dev/api/species/4/\", \"https://swapi.dev/api/species/5/\"],\n    \"created\": \"2014-12-10T14:23:31.880000Z\",\n    \"edited\": \"2014-12-20T19:49:45.256000Z\",\n    \"url\": \"https://swapi.dev/api/films/1/\"\n  })\n  const [text, setText] = useState(JSON.stringify(resource, null, 4))\n\n  useDebounce(() => {\n    try {\n      const json = JSON.parse(text)\n      setResource(json)\n    } catch (_) {\n    }\n  }, 1000, [text])\n\n  const [resolvedResources, resolve] = useAsyncFn(() => resolveRelatedResources(resource), [resource])\n\n  return (\n    <div className={b()}>\n      <textarea className={b(\"textarea\")} value={text} onChange={({target}) => setText(target.value)}/>\n      <button className={b(\"submit-button\")} onClick={resolve}>Load data</button>\n      <div className={b(\"result\", {loading: resolvedResources.loading})}>\n        {resolvedResources.loading && !resolvedResources.value && \"Loading\"}\n        {resolvedResources.error && `Error: ${resolvedResources.error.message}`}\n        {resolvedResources?.value && <ReactJson src={resolvedResources?.value} collapsed={2}/>}\n      </div>\n    </div>)\n}\n\n\nexport default ResourceResolver\n","import React, {createContext} from \"react\";\nimport {useAsync} from \"react-use\";\nimport \"./App.css\";\nimport BEM from \"../../utils/BEM.js\";\nimport People from \"../People/People.js\";\nimport {starWarsAPI} from \"../../services/starWars.js\";\nimport ResourceResolver from \"../ResourceResolver/ResourceResolver.js\";\n\nconst b = BEM(\"App\");\n\nexport const ApiContext = createContext(null);\n\nconst App = () => {\n  const {loading, error, value: api} = useAsync(() => starWarsAPI(), []);\n\n  return (<>\n    <main className={b()}>\n\n      <section className={b(\"section\")}>\n        <h1>A long time ago in a galaxy far, far away....</h1>\n        {loading && \"Loading\"}\n        {!loading && error && <div>Error: {error.message}</div>}\n        {!loading && api && (\n          <ApiContext.Provider value={api}>\n            <People/>\n          </ApiContext.Provider>\n        )}\n      </section>\n\n      <section className={b(\"section\")}>\n        <h1>Resource resolver.<br/> Click on \"load data\" button, to see magic....</h1>\n        <ResourceResolver/>\n      </section>\n\n    </main>\n  </>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}